<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lucas&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-12-23T09:20:29.880Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Lucas</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jquery操作DOM-获取DOM元素(选择器)</title>
    <link href="http://example.com/2020/12/23/jquery%E6%93%8D%E4%BD%9CDOM-%E8%8E%B7%E5%8F%96DOM%E5%85%83%E7%B4%A0-%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://example.com/2020/12/23/jquery%E6%93%8D%E4%BD%9CDOM-%E8%8E%B7%E5%8F%96DOM%E5%85%83%E7%B4%A0-%E9%80%89%E6%8B%A9%E5%99%A8/</id>
    <published>2020-12-23T09:14:37.000Z</published>
    <updated>2020-12-23T09:20:29.880Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、-‘选择器’"><a href="#1、-‘选择器’" class="headerlink" title="1、 $(‘选择器’)"></a>1、 $(‘选择器’)</h3><h4 id="1-1-类似css选择器-回顾css的选择器"><a href="#1-1-类似css选择器-回顾css的选择器" class="headerlink" title="1.1 类似css选择器,回顾css的选择器"></a>1.1 类似css选择器,回顾css的选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-class">.b</span>+<span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css"><span class="comment">/* + 表示紧邻兄弟选择器，类名为b的li的紧邻兄弟 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-class">.b</span>~<span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css"><span class="comment">/* ~ 表示通用兄弟选择器 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul li&#123;</span><br><span class="line"><span class="css">        <span class="comment">/*获取页面中的ul标签里面的所有的li*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul&gt;li&#123;</span><br><span class="line"><span class="css">        <span class="comment">/*获取页面中的ul标签里面的子元素li*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/*获取页面中的ul标签里面的子元素li的第一个*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/*获取页面中的ul标签里面的子元素li的最后一个*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(odd</span>/<span class="selector-tag">even</span>)&#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/*li里面的奇数/偶数个*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;c&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;aaa&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;bbb&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>9<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>10<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;c&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;aaa&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;bbb&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>9<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>10<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-‘选择器’"><a href="#1-2-‘选择器’" class="headerlink" title="1.2 $(‘选择器’)"></a>1.2 $(‘选择器’)</h4><p>不管你写什么，获取的都是一个集合对象，写id就是集合里面只有一个元素</p><h3 id="2、-特殊选择器"><a href="#2、-特殊选择器" class="headerlink" title="2、 特殊选择器"></a>2、 特殊选择器</h3><h4 id="2-1-first"><a href="#2-1-first" class="headerlink" title="2.1 :first"></a>2.1 :first</h4><p>  获取所有li里面的第一个</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;li:first&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&#x27;ul li:first&#x27;</span>));</span><br><span class="line"><span class="comment">//第一个ul里面所有的li的第一个 、 第二个ul里面所有的li的第一个</span></span><br></pre></td></tr></table></figure><h4 id="2-2-last"><a href="#2-2-last" class="headerlink" title="2.2 :last"></a>2.2 :last</h4><p>  获取所有里面的最后一个</p><h4 id="2-3-eq-index"><a href="#2-3-eq-index" class="headerlink" title="2.3 :eq(index)"></a>2.3 :eq(index)</h4><p>  获取所有里面的索引为index的那一个</p><h4 id="2-4-odd"><a href="#2-4-odd" class="headerlink" title="2.4 :odd"></a>2.4 :odd</h4><p>  获取索引为奇数的那些</p><h4 id="2-5-even"><a href="#2-5-even" class="headerlink" title="2.5 :even"></a>2.5 :even</h4><p>  获取索引为偶数的那些</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、-‘选择器’&quot;&gt;&lt;a href=&quot;#1、-‘选择器’&quot; class=&quot;headerlink&quot; title=&quot;1、 $(‘选择器’)&quot;&gt;&lt;/a&gt;1、 $(‘选择器’)&lt;/h3&gt;&lt;h4 id=&quot;1-1-类似css选择器-回顾css的选择器&quot;&gt;&lt;a href=&quot;#1</summary>
      
    
    
    
    <category term="JS" scheme="http://example.com/categories/JS/"/>
    
    
    <category term="jquery" scheme="http://example.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>ES5的严格模式</title>
    <link href="http://example.com/2020/12/07/ES5%E7%9A%84%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2020/12/07/ES5%E7%9A%84%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-12-07T15:43:00.000Z</published>
    <updated>2020-12-12T14:01:21.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="严格模式"><a href="#严格模式" class="headerlink" title="严格模式"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5>严格模式</font></h2><p><font size=4>js不是一门很严谨的语言。开发的时候，代码要求也不是很严格。 <strong>严格模式就是对开发时候写的一些内容作了要求</strong></font></p><a id="more"></a><br><br><h2 id="开启严格模式"><a href="#开启严格模式" class="headerlink" title="开启严格模式"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5><strong>开启严格模式</strong></font></h2><p><font size=4>直接在代码最开始位置写上”use strict”</font></p><br><br><h2 id="严格模式的规则"><a href="#严格模式的规则" class="headerlink" title="严格模式的规则"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5><strong>严格模式的规则</strong></font></h2><ul><li><font size=4>1、声明变量必须加var关键字</font></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"></span><br><span class="line">a = <span class="number">12</span>;<span class="comment">// 严格模式会报错,a is not defined</span></span><br></pre></td></tr></table></figure><ul><li><font size=4>2、函数的形参不可以重复</font></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a,a</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 严格模式会报错</span></span><br><span class="line">    <span class="built_in">console</span>.log(a)</span><br><span class="line">&#125;</span><br><span class="line">fn(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><ul><li><font size=4>3、声明式函数</font></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// this是window，严格模式下this是undefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>)</span><br><span class="line">&#125;</span><br><span class="line">fun()</span><br></pre></td></tr></table></figure><br><br>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;严格模式&quot;&gt;&lt;a href=&quot;#严格模式&quot; class=&quot;headerlink&quot; title=&quot;严格模式&quot;&gt;&lt;/a&gt;&lt;img src=&quot;http://image.woshipm.com/fp/images/h1.svg&quot; alt=&quot;图片&quot;&gt;&lt;font size=5&gt;严格模式&lt;/font&gt;&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;js不是一门很严谨的语言。开发的时候，代码要求也不是很严格。 &lt;strong&gt;严格模式就是对开发时候写的一些内容作了要求&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="JS基础" scheme="http://example.com/categories/JS%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="JS基础" scheme="http://example.com/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
    <category term="了解" scheme="http://example.com/tags/%E4%BA%86%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="http://example.com/2020/12/05/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://example.com/2020/12/05/%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2020-12-05T10:52:28.000Z</published>
    <updated>2020-12-13T04:07:39.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字符串的创建"><a href="#字符串的创建" class="headerlink" title="字符串的创建"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5>字符串的创建</font></h2><ul><li>字面量和构造函数</li><li>字面量：  var str = “hello world”;</li><li>构造函数： var str = new String(“hello world”);</li></ul><br><br>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;字符串的创建&quot;&gt;&lt;a href=&quot;#字符串的创建&quot; class=&quot;headerlink&quot; title=&quot;字符串的创建&quot;&gt;&lt;/a&gt;&lt;img src=&quot;http://image.woshipm.com/fp/images/h1.svg&quot; alt=&quot;图片&quot;&gt;&lt;font </summary>
      
    
    
    
    <category term="JS" scheme="http://example.com/categories/JS/"/>
    
    
    <category term="字符串" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>数组</title>
    <link href="http://example.com/2020/12/05/%E6%95%B0%E7%BB%84/"/>
    <id>http://example.com/2020/12/05/%E6%95%B0%E7%BB%84/</id>
    <published>2020-12-05T07:06:24.000Z</published>
    <updated>2020-12-13T03:48:04.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5>数组的定义</font></h2><ul><li>属于复杂数据类型<a id="more"></a></li><li>[元素1, 元素2,…]</li><li>啥都能放往里面放，数字、字符串、布尔甚至是函数、数组、对象，还可以是变量</li></ul><br><br><h2 id="创建一个数组"><a href="#创建一个数组" class="headerlink" title="创建一个数组"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5>创建一个数组</font></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字面量创建</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>,[],&#123;&#125;]</span><br><span class="line"><span class="comment">//构造函数创建</span></span><br><span class="line"><span class="keyword">var</span> array3 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;laowang&#x27;</span>, <span class="string">&#x27;laocheng&#x27;</span>, <span class="string">&#x27;laolv&#x27;</span>, <span class="string">&#x27;laojia&#x27;</span>, <span class="string">&#x27;laoliu&#x27;</span>)</span><br></pre></td></tr></table></figure><br><br><h2 id="数组的长度和索引"><a href="#数组的长度和索引" class="headerlink" title="数组的长度和索引"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5>数组的长度和索引</font></h2><ul><li>长度length</li><li>索引从0开始，到arr.length-1</li></ul><br><br><h2 id="数组ES3的常用方法"><a href="#数组ES3的常用方法" class="headerlink" title="数组ES3的常用方法"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5><strong>数组ES3的常用方法</strong></font></h2><ul><li><font size=4>splice</font><ul><li>作用：截取数组中的某些内容，按照数组的索引来截取。原数组改变了</li><li>语法：splice(从哪一个索引位置开始，截取多少个[，替换的新元素])</li><li>参数：3个参数，第三个可选择</li><li>返回值：被截取的元素的集合，是一个数组<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="keyword">var</span> arr1 = arr.splice(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&quot;laoyi&quot;</span>, <span class="string">&quot;laoer&quot;</span>, <span class="string">&quot;laosan&quot;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr)<span class="comment">//[&quot;laoyi&quot;,&quot;laoer&quot;,&quot;laosan&quot;,6,7,8]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1)<span class="comment">//[1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><font size=4>join</font><ul><li>作用：把数组里面的每一项内容链接起来，变成一个字符串。不会改变原数组</li><li>语法： arr.join(‘连接数组元素的符号’)</li><li>参数：’连接数组元素的符号’</li><li>返回值：用指定符号连接数组元素后的字符串</li><li>注意，如果不指定连接符，默认使用逗号连接</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="built_in">console</span>.log(arr.join())<span class="comment">//1, 2, 3, 4, 5, 6, 7, 8</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">&#x27;&#x27;</span>))<span class="comment">//12345678</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">&#x27;-&#x27;</span>))<span class="comment">//1-2-3-4-5-6-7-8</span></span><br></pre></td></tr></table></figure><ul><li><p><font size=4>sort</font></p><ul><li><p>作用1：元素默认按照转换为的字符串的各个字符的Unicode编码进行排序</p></li><li><p>语法： arr.sort()</p></li><li><p>参数：无</p></li><li><p>返回值：排好序的原数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">3000</span>,<span class="number">14000</span>,<span class="number">5000</span>,<span class="number">12000</span>,<span class="number">17000</span>,<span class="number">10000</span>,<span class="number">20000</span>];</span><br><span class="line">arr.sort()</span><br><span class="line"><span class="built_in">console</span>.log(arr)<span class="comment">//(7) [10000, 12000, 14000, 17000, 20000, 3000, 5000]</span></span><br></pre></td></tr></table></figure></li><li><p>作用2：按照排序函数执行排序规则,原数组改变了</p></li><li><p>语法： arr.sort(排序函数)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//语法</span></span><br><span class="line">  <span class="comment">// 参数</span></span><br><span class="line">  <span class="comment">// a:第一个比较的元素</span></span><br><span class="line">  <span class="comment">// b:第二个比较的元素</span></span><br><span class="line">  <span class="comment">// 如果返回值 &lt; 0 , 那么 a 会被排列到 b 之前</span></span><br><span class="line">  <span class="comment">// 如果返回值== 0 , a 和 b 的相对位置不变</span></span><br><span class="line">  <span class="comment">// 如果返回值 &gt; 0 , b 会被排列到 a 之前</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3000</span>,<span class="number">14000</span>,<span class="number">5000</span>,<span class="number">12000</span>,<span class="number">17000</span>,<span class="number">10000</span>,<span class="number">20000</span>];</span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 从小到大</span></span><br><span class="line">    <span class="comment">// if(a&gt;b)&#123;</span></span><br><span class="line">    <span class="comment">//    return 1; // return a-b</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if(a==b)&#123;</span></span><br><span class="line">    <span class="comment">//     return 0; // return a-b</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if(a&lt;b)&#123;</span></span><br><span class="line">    <span class="comment">//     return -1; // return a-b</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// 可以简化成</span></span><br><span class="line">    <span class="keyword">return</span> a-b</span><br><span class="line">&#125;)<span class="comment">//(7) [3000, 5000, 10000, 12000, 14000, 17000, 20000]</span></span><br><span class="line"></span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 从大到小</span></span><br><span class="line">    <span class="comment">// if(a&gt;b)&#123;</span></span><br><span class="line">    <span class="comment">//    return -1; //return b-a</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if(a==b)&#123;</span></span><br><span class="line">    <span class="comment">//     return 0; //return b-a</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if(a&lt;b)&#123;</span></span><br><span class="line">    <span class="comment">//     return 1; //return b-a</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// 可以简化成</span></span><br><span class="line">    <span class="keyword">return</span> b-a;</span><br><span class="line">&#125;)<span class="comment">//(7) [20000, 17000, 14000, 12000, 10000, 5000, 3000]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br></pre></td></tr></table></figure></li><li><p>参数：排序函数</p></li><li><p>返回值：排好序的原数组</p></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p><font size=4>concat</font>  </p><ul><li>作用：把多个数组进行拼接。不会改变原数组</li><li>语法： arr1.concat(arr2)</li><li>参数：数组</li><li>返回值：一个拼接好的新的数组<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="keyword">var</span> arr = arr1.concat(arr2);</span><br><span class="line"><span class="built_in">console</span>.log(arr1)<span class="comment">//[1, 2, 3, 4]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2)<span class="comment">//[5, 6, 7, 8]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)<span class="comment">//[1, 2, 3, 4, 5, 6, 7, 8]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><font size=4>reverse</font>  </p><ul><li>作用：用来反转数组使用的。改变的是原数组</li><li>语法： arr.reverse()</li><li>参数：无</li><li>返回值：是反转以后的数组</li></ul></li><li><p><font size=4>push</font></p><ul><li>作用：在数组末尾追加元素。改变的是原数组</li><li>语法： arr.push(666)，arr.push(666,{})</li><li>参数：可以是很多个，类型不限</li><li>返回值：追加元素以后数组的长度</li></ul></li><li><p><font size=4>unshift</font></p><ul><li>作用：在数组最前面添加元素。改变的是原数组</li><li>语法： arr.unshift(“1111”,”22222”)</li><li>参数：可以是很多个，类型不限</li><li>返回值：追加元素以后数组的长度</li></ul></li><li><p><font size=4>shift</font></p><ul><li>作用：用来删除数组最前面的一个元素。改变的是原数组</li><li>语法： arr.shift()</li><li>参数：无</li><li>返回值：被删除的那个元素</li></ul></li><li><p><font size=4>pop</font></p><ul><li>作用：用来删除数组末尾的一个元素。改变的是原数组</li><li>语法： arr.pop()</li><li>参数：无</li><li>返回值：被删除的那个元素</li></ul></li></ul><br><br><h2 id="数组的遍历及排序"><a href="#数组的遍历及排序" class="headerlink" title="数组的遍历及排序"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5>数组的遍历及排序</font></h2><p>遍历简单<br>排序(冒泡、选择)略(面试题会问)</p><br><br><h2 id="数组ES5常见方法"><a href="#数组ES5常见方法" class="headerlink" title="数组ES5常见方法"></a><img src="http://image.woshipm.com/fp/images/h1.svg" alt="图片"><font size=5><strong>数组ES5常见方法</strong></font></h2><ul><li><font size=4>indexOf</font><ul><li>作用：用来找到数组中某一项的索引。</li><li>语法： arr.indexOf(“字符串”)</li><li>参数：”字符串”</li><li>返回值：如果找到了，返回索引，number类型; 如果没有找到，返回-1<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>,<span class="string">&#x27;xiaoli&#x27;</span>,<span class="number">123</span>,<span class="string">&#x27;xiaowang&#x27;</span>,<span class="number">56</span>]</span><br><span class="line"><span class="keyword">var</span> index1 = arr.indexOf(<span class="string">&#x27;xiaowang&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(index1)<span class="comment">//4</span></span><br><span class="line"><span class="keyword">var</span> index2 = arr.indexOf(<span class="string">&#x27;laowang&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(index2)<span class="comment">//-1</span></span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">+ &lt;font size=4&gt;forEach&lt;/font&gt;</span></span><br><span class="line"><span class="string">  + 作用：和for循环一样，就是用来遍历数组的</span></span><br><span class="line"><span class="string">  + 语法：</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>,<span class="string">&#x27;xiaoli&#x27;</span>,<span class="number">123</span>,<span class="string">&#x27;xiaowang&#x27;</span>,<span class="number">56</span>]</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,array</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 数组里面有多少个元素，函数就执行多少次</span></span><br><span class="line">    <span class="comment">// 参数</span></span><br><span class="line">        <span class="comment">//第一个形参：item表示，本次循环到的数组元素的值</span></span><br><span class="line">        <span class="comment">//第二个形参: index表示，本次循环到是第几个数组元素</span></span><br><span class="line">        <span class="comment">//第三个形参: array表示当前正在循环的数组</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>参数：有三个参数,后两个参数是可选的</li><li>返回值：无<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value,i,array</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;本次循环到的是第&#x27;</span>+ i +<span class="string">&#x27;个数组元素&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;本次循环到的数组元素是&#x27;</span> + value)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><br><ul><li><font size=4>map</font><ul><li>作用：和forEach类似，只不过可以对数组中的每一项进行操作，返回一个新的数组</li><li>语法： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,array</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 数组里面有多少个元素，函数就执行多少次</span></span><br><span class="line">    <span class="comment">// 参数同forEach</span></span><br><span class="line">    <span class="comment">// 返回值：一个新的数组</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>参数：同forEach</li><li>返回值：一个新的数组<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="keyword">var</span> result = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">v,i,array</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 在这个函数里面可以对原数组的每一项进行操作</span></span><br><span class="line">    <span class="comment">// 这个函数的返回值就是新数组里面的其中一个元素</span></span><br><span class="line">    <span class="keyword">var</span> num = v*<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result)<span class="comment">//Array(7) [3, 6, 9, 9, 12, 15, 18]</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><br><br><ul><li><font size=4>filter</font><ul><li>作用：和map使用方式类似，按照我们的条件进行筛选数组，把原始数组中符合条件的筛选出来，组成一个新的数组返回</li><li>语法：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item,index,array</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 数组里面有多少个元素，函数就执行多少次</span></span><br><span class="line">    <span class="comment">// 参数同forEach</span></span><br><span class="line">    <span class="comment">// 返回值：一个新的数组，里面都是符合条件的数组元素</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当遍历到一个元素item，如果本次return true说明 符合条件</span></span><br><span class="line">    <span class="comment">// 当遍历到一个元素item，如果本次return false说明 不符合条件</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>参数：</li><li>返回值：一个新的数组<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2000</span>,<span class="number">3000</span>,<span class="number">4000</span>,<span class="number">5000</span>,<span class="number">7000</span>,<span class="number">10000</span>,<span class="number">20000</span>]</span><br><span class="line"><span class="keyword">var</span> result = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(item&gt;<span class="number">5000</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(result)<span class="comment">//Array(3) [7000, 10000, 20000]</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;数组的定义&quot;&gt;&lt;a href=&quot;#数组的定义&quot; class=&quot;headerlink&quot; title=&quot;数组的定义&quot;&gt;&lt;/a&gt;&lt;img src=&quot;http://image.woshipm.com/fp/images/h1.svg&quot; alt=&quot;图片&quot;&gt;&lt;font size=5&gt;数组的定义&lt;/font&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;属于复杂数据类型</summary>
    
    
    
    <category term="JS基础" scheme="http://example.com/categories/JS%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="JS基础" scheme="http://example.com/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数组ES3常见方法" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84ES3%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95/"/>
    
    <category term="数组ES5常见方法" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84ES5%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/11/23/hello-world/"/>
    <id>http://example.com/2020/11/23/hello-world/</id>
    <published>2020-11-23T13:51:51.000Z</published>
    <updated>2020-12-13T04:04:43.878Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
